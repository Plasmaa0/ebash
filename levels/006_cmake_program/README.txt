Sure, here's a step-by-step guide on how to build your first C++ program (Hello World) with CMake:

1. Create a new directory `cmake_program` for your project and navigate to it using the terminal.

2. Inside the project directory, create two more directories: `src` and `build`. The `src` directory will contain your source code files, while the `build` directory will contain the build files generated by CMake.

3. Create a new file inside the `src` directory named `main.cpp`, which will contain your Hello World program code. Here's an example code snippet:

```cpp
#include <iostream>

int main() {
    std::cout << "Hello, World!" << std::endl;
    return 0;
}
```

4. Next, create a new file in the root project directory named `CMakeLists.txt`. This file will contain the instructions for CMake to build your program. Here's an example `CMakeLists.txt` file that builds the `main.cpp` file you just created:

```cmake
# Set the minimum required version of CMake
cmake_minimum_required(VERSION 3.10)

# Set the name of the project and the programming language
project(my_program LANGUAGES CXX)

# Add the source files for the executable
add_executable(${PROJECT_NAME} src/main.cpp)
```

5. Now, navigate to the `build` directory in the terminal and run the following command to generate the build files:

```bash
cmake ..
```

Note that `..` tells CMake to look for the `CMakeLists.txt` file in the parent directory.

6. After the build files are generated, run the following command to build the program:

```bash
cmake --build .
```

This command will compile the `main.cpp` source file and create an executable named `my_program` in the `build` directory.

7. Finally, run the executable by entering the following command:

```bash
./my_program
```

This should print out "Hello, World!" to the console.

That's it! You have successfully built and run your first C++ program using CMake.
